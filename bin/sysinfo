#!/usr/bin/ruby

# SysInfo -- A Command Line Interface
#
# If your reading this via the rdocs you won't be able to see the code
# See: http://github.com/delano/sysinfo/blob/master/bin/sysinfo
#
# Usage: bin/sysinfo
#

$:.unshift(File.join(File.dirname(__FILE__), '..', 'lib')) # Make sure our local lib is first in line

require 'drydock'
require 'sysinfo'

module SysInfoCLI #:nodoc:
  extend Drydock

  debug :on
  default :info

  global :f, :format, String, "Output format. One of: yaml, json, csv, tsv, string (default)"
  global :v, :verbose, "Output everything I know"
  global :V, :version, "Display version number" do
    puts "SysInfo version: #{SysInfo::VERSION}"
    exit 0
  end

  about "Display system information"
  command :info do |obj|
    format = obj.global.format || :string
    format = :json if obj.global.verbose == true
    si = SysInfo.new
    puts format.to_s == 'string' ? si.platform : si.dump(format)
  end

  about "Display list of known architectures"
  command :arch do |obj|
    puts SysInfo.architectures(obj.global.verbose)
  end
  command_alias :arch, :architectures

  about "Display list of known OS implementations"
  command :impl do |obj|
    puts SysInfo.implementations(obj.global.verbose)
  end
  command_alias :impl, :implementations

  about "Display list of known operating system families"
  command :os do |obj|
    puts SysInfo.os_families(obj.global.verbose)
  end

end

Drydock.run!(ARGV, STDIN) if Drydock.run? && !Drydock.has_run?
